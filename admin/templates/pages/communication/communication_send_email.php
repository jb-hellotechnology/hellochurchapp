<?php

require '../../../vendor/autoload.php';
require '../../../secrets.php';

if(!perch_member_logged_in()){
	header("location:/");
}

if(!hello_church_email_owner(perch_get('id'))){
	perch_member_log_out();
	header("location:/");
}

$email = hello_church_get_email(perch_get('id'));

perch_layout('header');

$email = json_decode($email['emailContent'], true);
$subject = $email['emailSubject'];

$emailContent = '';
foreach($email as $type => $item){

	$typeParts = explode("_", $type);
	$type = $typeParts[0];
	
	if($type=='heading'){
		$emailContent .= '<h2>'.$item.'</h2>';
	}
	if($type=='text'){
		$emailContent .= '<p>'.nl2br($item).'</p>';
	}
	if($type=='youtube'){
		$emailContent .= $item;
	}
	if($type=='bible'){
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
		$ch = curl_init();
		
		curl_setopt($ch, CURLOPT_URL, 'https://api.esv.org/v3/passage/html/?include-footnotes=false&q='.urlencode($item));
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
		
		
		$headers = array();
		$headers[] = 'Authorization: Token 0aa221b3e0dbb4ca9d1abe0438ceac27e2b81cee';
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
		
		$resultESV = curl_exec($ch);
		if (curl_errno($ch)) {
		    echo 'Error:' . curl_error($ch);
		}
		curl_close($ch);
		$json = json_decode($resultESV,true);
		$emailContent .= '<div class="bible flow">'.$json['passages'][0].'</div>';

	}
	if($type=='link'){
		$emailContent .= '<p><a class="button primary" href="'.$item.'">Click Here</a></p>';
	}
	
}

if($_GET['send']==1){
	
	$to = $_POST['recipients'];
	$message = $emailContent;
	
	// Configure API key authorization: api-key
	$config = Brevo\Client\Configuration::getDefaultConfiguration()->setApiKey('api-key', $brevoAPI);
	
	$apiInstance = new Brevo\Client\Api\TransactionalEmailsApi(
	    // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
	    // This is optional, `GuzzleHttp\Client` will be used as default.
	    new GuzzleHttp\Client(),
	    $config
	);
	$sendSmtpEmail = new \Brevo\Client\Model\SendSmtpEmail([
	  	 'subject' => $subject,
	     'sender' => ['name' => 'Hello Church', 'email' => 'email@hellochurch.tech'],
	     'replyTo' => ['name' => 'Grace Church Loftus', 'email' => 'jack@hellotechnology.co.uk'],
	     'to' => [[ 'email' => 'jack@jackbarber.co.uk' ]],
	     'htmlContent' => '<html><body>'.$emailContent.'</body></html>',
	]);
	
	try {
	    $result = $apiInstance->sendTransacEmail($sendSmtpEmail);
	    print_r($result);
	} catch (Exception $e) {
	    echo 'Exception when calling TransactionalEmailsApi->sendTransacEmail: ', $e->getMessage(), PHP_EOL;
	}
	
}
?>
<main class="flow full">
	<h1 class="with-button">Send Email</h1>
	<?= $description ?>
	<div class="section-grid">
		<div>
			<form id="form-email">
			<section>
				<header>
					<h2><strong>Subject:</strong> <?= $subject ?></h2>
				</header>
				<article>
					<div class="email-container sortable">
						<?= $emailContent ?>
					</div>
				</article>
				<footer>
					
				</footer>
			</section>
			</form>
		</div>
		<div>
			<section>
				<header>
					<h2>Recipients</h2>
				</header>
				<form method="post" action="/communication/send-email?id=<?= perch_get('id') ?>&send=1">
				<article class="flow">
					<input type="text" name="recipients" class="tagify"></textarea>
				</article>
				<footer>
					<input class="button primary" type="submit" value="Send" />
				</footer>
				</form>
			</section>
		</div>
	</div>
</main>
<?php perch_layout('footer'); ?>